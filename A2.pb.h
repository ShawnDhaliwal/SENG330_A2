/**
 * @file   A2.pb.h
 * @Author Shawn Dhaliwal
 * @date   Nov 11, 2015
 * @brief  Generated by A2.proto, using google protocole buffer.
 *
 *
 */

#ifndef PROTOBUF_A2_2eproto__INCLUDED
#define PROTOBUF_A2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SENG330_A2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_A2_2eproto();
void protobuf_AssignDesc_A2_2eproto();
void protobuf_ShutdownFile_A2_2eproto();

class Elliptical;
class Machine;
class Treadmill;

//!  Machine class produced when attempting to serialze project using google protocole buffer.
/*!
    Located in A2.pb.h. Serializtion was attempted. Difficulties with A2.pb.h file and setting up A2.proto
    proved to be too difficult to overcome.
*/
class Machine : public ::google::protobuf::Message {
 public:
  Machine();
  virtual ~Machine();

  Machine(const Machine& from);

  inline Machine& operator=(const Machine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Machine& default_instance();

  enum SubtypesCase {
    kTreadmill = 1,
    kElliptical = 2,
    SUBTYPES_NOT_SET = 0,
  };

  void Swap(Machine* other);

  // implements Message ----------------------------------------------

  inline Machine* New() const { return New(NULL); }

  Machine* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Machine& from);
  void MergeFrom(const Machine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Machine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SENG330_A2.Treadmill Treadmill = 1;
  bool has_treadmill() const;
  void clear_treadmill();
  static const int kTreadmillFieldNumber = 1;
  const ::SENG330_A2::Treadmill& treadmill() const;
  ::SENG330_A2::Treadmill* mutable_treadmill();
  ::SENG330_A2::Treadmill* release_treadmill();
  void set_allocated_treadmill(::SENG330_A2::Treadmill* treadmill);

  // optional .SENG330_A2.Elliptical Elliptical = 2;
  bool has_elliptical() const;
  void clear_elliptical();
  static const int kEllipticalFieldNumber = 2;
  const ::SENG330_A2::Elliptical& elliptical() const;
  ::SENG330_A2::Elliptical* mutable_elliptical();
  ::SENG330_A2::Elliptical* release_elliptical();
  void set_allocated_elliptical(::SENG330_A2::Elliptical* elliptical);

  SubtypesCase subtypes_case() const;
  // @@protoc_insertion_point(class_scope:SENG330_A2.Machine)
 private:
  inline void set_has_treadmill();
  inline void set_has_elliptical();

  inline bool has_subtypes() const;
  void clear_subtypes();
  inline void clear_has_subtypes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union SubtypesUnion {
    SubtypesUnion() {}
    ::SENG330_A2::Treadmill* treadmill_;
    ::SENG330_A2::Elliptical* elliptical_;
  } subtypes_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_A2_2eproto();
  friend void protobuf_AssignDesc_A2_2eproto();
  friend void protobuf_ShutdownFile_A2_2eproto();

  void InitAsDefaultInstance();
  static Machine* default_instance_;
};
    //!  Elliptical class produced when attempting to serialze project using google protocole buffer.
    /*!
     Located in A2.pb.h. Serializtion was attempted. Difficulties with A2.pb.h file and setting up A2.proto
     proved to be too difficult to overcome.
     */
class Elliptical : public ::google::protobuf::Message {
 public:
  Elliptical();
  virtual ~Elliptical();

  Elliptical(const Elliptical& from);

  inline Elliptical& operator=(const Elliptical& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Elliptical& default_instance();

  void Swap(Elliptical* other);

  // implements Message ----------------------------------------------

  inline Elliptical* New() const { return New(NULL); }

  Elliptical* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Elliptical& from);
  void MergeFrom(const Elliptical& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Elliptical* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SENG330_A2.Elliptical)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_A2_2eproto();
  friend void protobuf_AssignDesc_A2_2eproto();
  friend void protobuf_ShutdownFile_A2_2eproto();

  void InitAsDefaultInstance();
  static Elliptical* default_instance_;
};
    //!  Treadmill class produced when attempting to serialze project using google protocole buffer.
    /*!
     Located in A2.pb.h. Serializtion was attempted. Difficulties with A2.pb.h file and setting up A2.proto
     proved to be too difficult to overcome.
     */
class Treadmill : public ::google::protobuf::Message {
 public:
  Treadmill();
  virtual ~Treadmill();

  Treadmill(const Treadmill& from);

  inline Treadmill& operator=(const Treadmill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treadmill& default_instance();

  void Swap(Treadmill* other);

  // implements Message ----------------------------------------------

  inline Treadmill* New() const { return New(NULL); }

  Treadmill* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treadmill& from);
  void MergeFrom(const Treadmill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Treadmill* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SENG330_A2.Treadmill)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_A2_2eproto();
  friend void protobuf_AssignDesc_A2_2eproto();
  friend void protobuf_ShutdownFile_A2_2eproto();

  void InitAsDefaultInstance();
  static Treadmill* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Machine

// optional .SENG330_A2.Treadmill Treadmill = 1;
inline bool Machine::has_treadmill() const {
  return subtypes_case() == kTreadmill;
}
inline void Machine::set_has_treadmill() {
  _oneof_case_[0] = kTreadmill;
}
inline void Machine::clear_treadmill() {
  if (has_treadmill()) {
    delete subtypes_.treadmill_;
    clear_has_subtypes();
  }
}
inline  const ::SENG330_A2::Treadmill& Machine::treadmill() const {
  // @@protoc_insertion_point(field_get:SENG330_A2.Machine.Treadmill)
  return has_treadmill()
      ? *subtypes_.treadmill_
      : ::SENG330_A2::Treadmill::default_instance();
}
inline ::SENG330_A2::Treadmill* Machine::mutable_treadmill() {
  if (!has_treadmill()) {
    clear_subtypes();
    set_has_treadmill();
    subtypes_.treadmill_ = new ::SENG330_A2::Treadmill;
  }
  // @@protoc_insertion_point(field_mutable:SENG330_A2.Machine.Treadmill)
  return subtypes_.treadmill_;
}
inline ::SENG330_A2::Treadmill* Machine::release_treadmill() {
  if (has_treadmill()) {
    clear_has_subtypes();
    ::SENG330_A2::Treadmill* temp = subtypes_.treadmill_;
    subtypes_.treadmill_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Machine::set_allocated_treadmill(::SENG330_A2::Treadmill* treadmill) {
  clear_subtypes();
  if (treadmill) {
    set_has_treadmill();
    subtypes_.treadmill_ = treadmill;
  }
  // @@protoc_insertion_point(field_set_allocated:SENG330_A2.Machine.Treadmill)
}

// optional .SENG330_A2.Elliptical Elliptical = 2;
inline bool Machine::has_elliptical() const {
  return subtypes_case() == kElliptical;
}
inline void Machine::set_has_elliptical() {
  _oneof_case_[0] = kElliptical;
}
inline void Machine::clear_elliptical() {
  if (has_elliptical()) {
    delete subtypes_.elliptical_;
    clear_has_subtypes();
  }
}
inline  const ::SENG330_A2::Elliptical& Machine::elliptical() const {
  // @@protoc_insertion_point(field_get:SENG330_A2.Machine.Elliptical)
  return has_elliptical()
      ? *subtypes_.elliptical_
      : ::SENG330_A2::Elliptical::default_instance();
}
inline ::SENG330_A2::Elliptical* Machine::mutable_elliptical() {
  if (!has_elliptical()) {
    clear_subtypes();
    set_has_elliptical();
    subtypes_.elliptical_ = new ::SENG330_A2::Elliptical;
  }
  // @@protoc_insertion_point(field_mutable:SENG330_A2.Machine.Elliptical)
  return subtypes_.elliptical_;
}
inline ::SENG330_A2::Elliptical* Machine::release_elliptical() {
  if (has_elliptical()) {
    clear_has_subtypes();
    ::SENG330_A2::Elliptical* temp = subtypes_.elliptical_;
    subtypes_.elliptical_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Machine::set_allocated_elliptical(::SENG330_A2::Elliptical* elliptical) {
  clear_subtypes();
  if (elliptical) {
    set_has_elliptical();
    subtypes_.elliptical_ = elliptical;
  }
  // @@protoc_insertion_point(field_set_allocated:SENG330_A2.Machine.Elliptical)
}

inline bool Machine::has_subtypes() const {
  return subtypes_case() != SUBTYPES_NOT_SET;
}
inline void Machine::clear_has_subtypes() {
  _oneof_case_[0] = SUBTYPES_NOT_SET;
}
inline Machine::SubtypesCase Machine::subtypes_case() const {
  return Machine::SubtypesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Elliptical

// -------------------------------------------------------------------

// Treadmill

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace SENG330_A2

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_A2_2eproto__INCLUDED
